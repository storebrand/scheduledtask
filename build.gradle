plugins {
    id "com.github.spotbugs" version "5.0.5"
}

allprojects {
    group 'com.storebrand'
    version '0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.spotbugs'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava {
        options.encoding = 'UTF-8'
        options.deprecation = true
        options.incremental = true
        options.compilerArgs += ['-Werror', '-Xlint:all', '-Xlint:-serial']
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    javadoc {
        // without the -quiet option, the build fails due to errors&warns
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    // Common versions
    ext {
        slf4jVersion = '1.7.35'
    }

    project.buildDir = 'build-gradle'

    repositories {
        maven {
            url "http://artifactory.skagenfondene.no/artifactory/libs-release"
            allowInsecureProtocol = true
        }
        mavenCentral()
    }

    task allDependencies(type: DependencyReportTask) {}

    spotbugs {
        toolVersion = '4.5.3'
    }

    // To generate an HTML report and XML report
    tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
        reports {
            xml.required.set(false)
            html.required.set(true)
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                pom {
                    name = 'HealthCheck'
                    description = 'Health checks for services.'
                }
                from components.java
            }
        }
    }

    // ------------------------------------------------
    // -- Release configuration. The release file is not checked in to version control, and should
    //    instead be kept locally to configure how to deploy this.
    if (file("${ rootProject.projectDir }/repositories.gradle").exists()) {
        apply from: "${ rootProject.projectDir }/repositories.gradle"
    }
}

// GradleWrapper version specifier.
wrapper { gradleVersion = "7.3.3" }